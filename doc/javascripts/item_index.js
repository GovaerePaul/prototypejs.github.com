if (!window.PDoc) window.PDoc = {};
PDoc.elements = {
  'Element#remove': { 'name': 'Element#remove', 'type': 'instance method', 'path': 'dom/element/prototype/remove' },
'Form.Element.serialize': { 'name': 'Form.Element.serialize', 'type': 'class method', 'path': 'dom/form/element/serialize' },
'Hash#toTemplateReplacements': { 'name': 'Hash#toTemplateReplacements', 'type': 'instance method', 'path': 'language/hash/prototype/totemplatereplacements' },
'Enumerable#zip': { 'name': 'Enumerable#zip', 'type': 'instance method', 'path': 'language/enumerable/prototype/zip' },
'String': { 'name': 'String', 'type': 'class', 'path': 'language/string' },
'Element.descendantOf': { 'name': 'Element.descendantOf', 'type': 'class method', 'path': 'dom/element/descendantof' },
'Element#immediateDescendants': { 'name': 'Element#immediateDescendants', 'type': 'instance method', 'path': 'dom/element/prototype/immediatedescendants' },
'String#extractScripts': { 'name': 'String#extractScripts', 'type': 'instance method', 'path': 'language/string/prototype/extractscripts' },
'Event.Handler#start': { 'name': 'Event.Handler#start', 'type': 'instance property', 'path': 'dom/event/handler/prototype/start' },
'Element#makePositioned': { 'name': 'Element#makePositioned', 'type': 'instance method', 'path': 'dom/element/prototype/makepositioned' },
'Element.stopObserving': { 'name': 'Element.stopObserving', 'type': 'class method', 'path': 'dom/element/stopobserving' },
'new Ajax.PeriodicalUpdater': { 'name': 'new Ajax.PeriodicalUpdater', 'type': 'constructor', 'path': 'ajax/ajax/periodicalupdater/new' },
'Event': { 'name': 'Event', 'type': 'class', 'path': 'dom/event' },
'String#blank': { 'name': 'String#blank', 'type': 'instance method', 'path': 'language/string/prototype/blank' },
'Element#on': { 'name': 'Element#on', 'type': 'instance method', 'path': 'dom/element/prototype/on' },
'Element#positionedOffset': { 'name': 'Element#positionedOffset', 'type': 'instance method', 'path': 'dom/element/prototype/positionedoffset' },
'Number#round': { 'name': 'Number#round', 'type': 'instance method', 'path': 'language/number/prototype/round' },
'Array#uniq': { 'name': 'Array#uniq', 'type': 'instance method', 'path': 'language/array/prototype/uniq' },
'Template#evaluate': { 'name': 'Template#evaluate', 'type': 'instance method', 'path': 'language/template/prototype/evaluate' },
'Form.Element#getValue': { 'name': 'Form.Element#getValue', 'type': 'instance method', 'path': 'dom/form/element/prototype/getvalue' },
'Event.pointerX': { 'name': 'Event.pointerX', 'type': 'class method', 'path': 'dom/event/pointerx' },
'Element.getHeight': { 'name': 'Element.getHeight', 'type': 'class method', 'path': 'dom/element/getheight' },
'Form.request': { 'name': 'Form.request', 'type': 'class method', 'path': 'dom/form/request' },
'Array': { 'name': 'Array', 'type': 'class', 'path': 'language/array' },
'Try': { 'name': 'Try', 'type': 'namespace', 'path': 'language/try' },
'Event.pointerY': { 'name': 'Event.pointerY', 'type': 'class method', 'path': 'dom/event/pointery' },
'Element.select': { 'name': 'Element.select', 'type': 'class method', 'path': 'dom/element/select' },
'$A': { 'name': '$A', 'type': 'utility', 'path': 'language/dollara' },
'Number#floor': { 'name': 'Number#floor', 'type': 'instance method', 'path': 'language/number/prototype/floor' },
'Element#getOffsetParent': { 'name': 'Element#getOffsetParent', 'type': 'instance method', 'path': 'dom/element/prototype/getoffsetparent' },
'ObjectRange': { 'name': 'ObjectRange', 'type': 'class', 'path': 'language/objectrange' },
'new Element': { 'name': 'new Element', 'type': 'constructor', 'path': 'dom/element/new' },
'String#empty': { 'name': 'String#empty', 'type': 'instance method', 'path': 'language/string/prototype/empty' },
'Element.hasClassName': { 'name': 'Element.hasClassName', 'type': 'class method', 'path': 'dom/element/hasclassname' },
'Element.Offset#toArray': { 'name': 'Element.Offset#toArray', 'type': 'instance method', 'path': 'dom/element/offset/prototype/toarray' },
'Event.pointer': { 'name': 'Event.pointer', 'type': 'class method', 'path': 'dom/event/pointer' },
'Element#setOpacity': { 'name': 'Element#setOpacity', 'type': 'instance method', 'path': 'dom/element/prototype/setopacity' },
'Object.isHash': { 'name': 'Object.isHash', 'type': 'class method', 'path': 'language/object/ishash' },
'Ajax.Response#request': { 'name': 'Ajax.Response#request', 'type': 'instance property', 'path': 'ajax/ajax/response/prototype/request' },
'Event.extend': { 'name': 'Event.extend', 'type': 'class method', 'path': 'dom/event/extend' },
'Prototype.Selector': { 'name': 'Prototype.Selector', 'type': 'namespace', 'path': 'language/prototype/selector' },
'String.interpret': { 'name': 'String.interpret', 'type': 'class method', 'path': 'language/string/interpret' },
'Element.viewportOffset': { 'name': 'Element.viewportOffset', 'type': 'class method', 'path': 'dom/element/viewportoffset' },
'String#scan': { 'name': 'String#scan', 'type': 'instance method', 'path': 'language/string/prototype/scan' },
'Event#element': { 'name': 'Event#element', 'type': 'instance method', 'path': 'dom/event/prototype/element' },
'document.fire': { 'name': 'document.fire', 'type': 'class method', 'path': 'dom/document/fire' },
'Object.toQueryString': { 'name': 'Object.toQueryString', 'type': 'class method', 'path': 'language/object/toquerystring' },
'Element#hide': { 'name': 'Element#hide', 'type': 'instance method', 'path': 'dom/element/prototype/hide' },
'$F': { 'name': '$F', 'type': 'utility', 'path': 'dom/dollarf' },
'Hash#toQueryString': { 'name': 'Hash#toQueryString', 'type': 'instance method', 'path': 'language/hash/prototype/toquerystring' },
'Ajax.Responders.register': { 'name': 'Ajax.Responders.register', 'type': 'class method', 'path': 'ajax/ajax/responders/register' },
'Hash#merge': { 'name': 'Hash#merge', 'type': 'instance method', 'path': 'language/hash/prototype/merge' },
'Enumerable#grep': { 'name': 'Enumerable#grep', 'type': 'instance method', 'path': 'language/enumerable/prototype/grep' },
'RegExp#match': { 'name': 'RegExp#match', 'type': 'instance method', 'path': 'language/regexp/prototype/match' },
'Object.toHTML': { 'name': 'Object.toHTML', 'type': 'class method', 'path': 'language/object/tohtml' },
'Element.recursivelyCollect': { 'name': 'Element.recursivelyCollect', 'type': 'class method', 'path': 'dom/element/recursivelycollect' },
'Element.adjacent': { 'name': 'Element.adjacent', 'type': 'class method', 'path': 'dom/element/adjacent' },
'Element.next': { 'name': 'Element.next', 'type': 'class method', 'path': 'dom/element/next' },
'$H': { 'name': '$H', 'type': 'utility', 'path': 'language/dollarh' },
'Element#getHeight': { 'name': 'Element#getHeight', 'type': 'instance method', 'path': 'dom/element/prototype/getheight' },
'Element#recursivelyCollect': { 'name': 'Element#recursivelyCollect', 'type': 'instance method', 'path': 'dom/element/prototype/recursivelycollect' },
'String#toQueryParams': { 'name': 'String#toQueryParams', 'type': 'instance method', 'path': 'language/string/prototype/toqueryparams' },
'Element.getStorage': { 'name': 'Element.getStorage', 'type': 'class method', 'path': 'dom/element/getstorage' },
'Element.insert': { 'name': 'Element.insert', 'type': 'class method', 'path': 'dom/element/insert' },
'new Element.Layout': { 'name': 'new Element.Layout', 'type': 'constructor', 'path': 'dom/element/layout/new' },
'Enumerable#invoke': { 'name': 'Enumerable#invoke', 'type': 'instance method', 'path': 'language/enumerable/prototype/invoke' },
'Element.addMethods': { 'name': 'Element.addMethods', 'type': 'class method', 'path': 'dom/element/addmethods' },
'Element#setStyle': { 'name': 'Element#setStyle', 'type': 'instance method', 'path': 'dom/element/prototype/setstyle' },
'Array#last': { 'name': 'Array#last', 'type': 'instance method', 'path': 'language/array/prototype/last' },
'Element#show': { 'name': 'Element#show', 'type': 'instance method', 'path': 'dom/element/prototype/show' },
'Event.Handler': { 'name': 'Event.Handler', 'type': 'class', 'path': 'dom/event/handler' },
'Function#bind': { 'name': 'Function#bind', 'type': 'instance method', 'path': 'language/function/prototype/bind' },
'Element.observe': { 'name': 'Element.observe', 'type': 'class method', 'path': 'dom/element/observe' },
'document.viewport.getScrollOffsets': { 'name': 'document.viewport.getScrollOffsets', 'type': 'class method', 'path': 'dom/document/viewport/getscrolloffsets' },
'String#unfilterJSON': { 'name': 'String#unfilterJSON', 'type': 'instance method', 'path': 'language/string/prototype/unfilterjson' },
'Hash#index': { 'name': 'Hash#index', 'type': 'instance method', 'path': 'language/hash/prototype/index' },
'Array#clear': { 'name': 'Array#clear', 'type': 'instance method', 'path': 'language/array/prototype/clear' },
'Form.Element.getValue': { 'name': 'Form.Element.getValue', 'type': 'class method', 'path': 'dom/form/element/getvalue' },
'Element.absolutize': { 'name': 'Element.absolutize', 'type': 'class method', 'path': 'dom/element/absolutize' },
'Array.from': { 'name': 'Array.from', 'type': 'class method', 'path': 'language/array/from' },
'Element.update': { 'name': 'Element.update', 'type': 'class method', 'path': 'dom/element/update' },
'Ajax.Response#responseXML': { 'name': 'Ajax.Response#responseXML', 'type': 'instance property', 'path': 'ajax/ajax/response/prototype/responsexml' },
'Form.Element#serialize': { 'name': 'Form.Element#serialize', 'type': 'instance method', 'path': 'dom/form/element/prototype/serialize' },
'$R': { 'name': '$R', 'type': 'utility', 'path': 'language/dollarr' },
'Form.Element.present': { 'name': 'Form.Element.present', 'type': 'class method', 'path': 'dom/form/element/present' },
'Element.clone': { 'name': 'Element.clone', 'type': 'class method', 'path': 'dom/element/clone' },
'Element#writeAttribute': { 'name': 'Element#writeAttribute', 'type': 'instance method', 'path': 'dom/element/prototype/writeattribute' },
'Enumerable#inject': { 'name': 'Enumerable#inject', 'type': 'instance method', 'path': 'language/enumerable/prototype/inject' },
'Element.visible': { 'name': 'Element.visible', 'type': 'class method', 'path': 'dom/element/visible' },
'Element#next': { 'name': 'Element#next', 'type': 'instance method', 'path': 'dom/element/prototype/next' },
'Element#previous': { 'name': 'Element#previous', 'type': 'instance method', 'path': 'dom/element/prototype/previous' },
'Element': { 'name': 'Element', 'type': 'class', 'path': 'dom/element' },
'Element.Layout.COMPOSITE_PROPERTIES': { 'name': 'Element.Layout.COMPOSITE_PROPERTIES', 'type': 'constant', 'path': 'dom/element/layout/composite_properties' },
'new Selector': { 'name': 'new Selector', 'type': 'constructor', 'path': 'dom/selector/new' },
'Element#descendants': { 'name': 'Element#descendants', 'type': 'instance method', 'path': 'dom/element/prototype/descendants' },
'Object': { 'name': 'Object', 'type': 'class', 'path': 'language/object' },
'Enumerable#include': { 'name': 'Enumerable#include', 'type': 'instance method', 'path': 'language/enumerable/prototype/include' },
'String#dasherize': { 'name': 'String#dasherize', 'type': 'instance method', 'path': 'language/string/prototype/dasherize' },
'Element#replace': { 'name': 'Element#replace', 'type': 'instance method', 'path': 'dom/element/prototype/replace' },
'Element#toggle': { 'name': 'Element#toggle', 'type': 'instance method', 'path': 'dom/element/prototype/toggle' },
'String#interpolate': { 'name': 'String#interpolate', 'type': 'instance method', 'path': 'language/string/prototype/interpolate' },
'String#camelize': { 'name': 'String#camelize', 'type': 'instance method', 'path': 'language/string/prototype/camelize' },
'new ObjectRange': { 'name': 'new ObjectRange', 'type': 'constructor', 'path': 'language/objectrange/new' },
'Object.isElement': { 'name': 'Object.isElement', 'type': 'class method', 'path': 'language/object/iselement' },
'Element#relativize': { 'name': 'Element#relativize', 'type': 'instance method', 'path': 'dom/element/prototype/relativize' },
'String#unescapeHTML': { 'name': 'String#unescapeHTML', 'type': 'instance method', 'path': 'language/string/prototype/unescapehtml' },
'Array#flatten': { 'name': 'Array#flatten', 'type': 'instance method', 'path': 'language/array/prototype/flatten' },
'Prototype.BrowserFeatures.SelectorsAPI': { 'name': 'Prototype.BrowserFeatures.SelectorsAPI', 'type': 'class property', 'path': 'language/prototype/browserfeatures/selectorsapi' },
'Element.makePositioned': { 'name': 'Element.makePositioned', 'type': 'class method', 'path': 'dom/element/makepositioned' },
'Event#isMiddleClick': { 'name': 'Event#isMiddleClick', 'type': 'instance method', 'path': 'dom/event/prototype/ismiddleclick' },
'document': { 'name': 'document', 'type': 'namespace', 'path': 'dom/document' },
'String#times': { 'name': 'String#times', 'type': 'instance method', 'path': 'language/string/prototype/times' },
'Abstract.EventObserver': { 'name': 'Abstract.EventObserver', 'type': 'class', 'path': 'dom/abstract/eventobserver' },
'Event.findElement': { 'name': 'Event.findElement', 'type': 'class method', 'path': 'dom/event/findelement' },
'Element.positionedOffset': { 'name': 'Element.positionedOffset', 'type': 'class method', 'path': 'dom/element/positionedoffset' },
'Form#reset': { 'name': 'Form#reset', 'type': 'instance method', 'path': 'dom/form/prototype/reset' },
'$': { 'name': '$', 'type': 'utility', 'path': 'dom/dollar' },
'Abstract.TimedObserver': { 'name': 'Abstract.TimedObserver', 'type': 'class', 'path': 'dom/abstract/timedobserver' },
'Hash#get': { 'name': 'Hash#get', 'type': 'instance method', 'path': 'language/hash/prototype/get' },
'Number': { 'name': 'Number', 'type': 'class', 'path': 'language/number' },
'Element.firstDescendant': { 'name': 'Element.firstDescendant', 'type': 'class method', 'path': 'dom/element/firstdescendant' },
'document.viewport.getDimensions': { 'name': 'document.viewport.getDimensions', 'type': 'class method', 'path': 'dom/document/viewport/getdimensions' },
'Ajax.Response#statusText': { 'name': 'Ajax.Response#statusText', 'type': 'instance property', 'path': 'ajax/ajax/response/prototype/statustext' },
'Element.remove': { 'name': 'Element.remove', 'type': 'class method', 'path': 'dom/element/remove' },
'Element.setStyle': { 'name': 'Element.setStyle', 'type': 'class method', 'path': 'dom/element/setstyle' },
'new Form.Observer': { 'name': 'new Form.Observer', 'type': 'constructor', 'path': 'dom/form/observer/new' },
'Element.up': { 'name': 'Element.up', 'type': 'class method', 'path': 'dom/element/up' },
'Element.hide': { 'name': 'Element.hide', 'type': 'class method', 'path': 'dom/element/hide' },
'Function': { 'name': 'Function', 'type': 'class', 'path': 'language/function' },
'Event.isMiddleClick': { 'name': 'Event.isMiddleClick', 'type': 'class method', 'path': 'dom/event/ismiddleclick' },
'Event.Handler#stop': { 'name': 'Event.Handler#stop', 'type': 'instance property', 'path': 'dom/event/handler/prototype/stop' },
'Number#ceil': { 'name': 'Number#ceil', 'type': 'instance method', 'path': 'language/number/prototype/ceil' },
'Form.Element#setValue': { 'name': 'Form.Element#setValue', 'type': 'instance method', 'path': 'dom/form/element/prototype/setvalue' },
'Element.getStyle': { 'name': 'Element.getStyle', 'type': 'class method', 'path': 'dom/element/getstyle' },
'Element#down': { 'name': 'Element#down', 'type': 'instance method', 'path': 'dom/element/prototype/down' },
'Element.show': { 'name': 'Element.show', 'type': 'class method', 'path': 'dom/element/show' },
'Element.Layout#toCSS': { 'name': 'Element.Layout#toCSS', 'type': 'instance method', 'path': 'dom/element/layout/prototype/tocss' },
'ObjectRange#end': { 'name': 'ObjectRange#end', 'type': 'instance property', 'path': 'language/objectrange/prototype/end' },
'Element#cumulativeScrollOffset': { 'name': 'Element#cumulativeScrollOffset', 'type': 'instance method', 'path': 'dom/element/prototype/cumulativescrolloffset' },
'Form.getElements': { 'name': 'Form.getElements', 'type': 'class method', 'path': 'dom/form/getelements' },
'Element.writeAttribute': { 'name': 'Element.writeAttribute', 'type': 'class method', 'path': 'dom/element/writeattribute' },
'Element.cleanWhitespace': { 'name': 'Element.cleanWhitespace', 'type': 'class method', 'path': 'dom/element/cleanwhitespace' },
'Form#request': { 'name': 'Form#request', 'type': 'instance method', 'path': 'dom/form/prototype/request' },
'Date': { 'name': 'Date', 'type': 'class', 'path': 'language/date' },
'Array#clone': { 'name': 'Array#clone', 'type': 'instance method', 'path': 'language/array/prototype/clone' },
'Element.inspect': { 'name': 'Element.inspect', 'type': 'class method', 'path': 'dom/element/inspect' },
'Ajax.Response#getAllResponseHeaders': { 'name': 'Ajax.Response#getAllResponseHeaders', 'type': 'instance method', 'path': 'ajax/ajax/response/prototype/getallresponseheaders' },
'Event#isLeftClick': { 'name': 'Event#isLeftClick', 'type': 'instance method', 'path': 'dom/event/prototype/isleftclick' },
'Element.previous': { 'name': 'Element.previous', 'type': 'class method', 'path': 'dom/element/previous' },
'Element#descendantOf': { 'name': 'Element#descendantOf', 'type': 'instance method', 'path': 'dom/element/prototype/descendantof' },
'Selector#findElements': { 'name': 'Selector#findElements', 'type': 'instance method', 'path': 'dom/selector/prototype/findelements' },
'Element#getWidth': { 'name': 'Element#getWidth', 'type': 'instance method', 'path': 'dom/element/prototype/getwidth' },
'Element#getLayout': { 'name': 'Element#getLayout', 'type': 'instance method', 'path': 'dom/element/prototype/getlayout' },
'new PeriodicalExecuter': { 'name': 'new PeriodicalExecuter', 'type': 'constructor', 'path': 'language/periodicalexecuter/new' },
'Template': { 'name': 'Template', 'type': 'class', 'path': 'language/template' },
'String#capitalize': { 'name': 'String#capitalize', 'type': 'instance method', 'path': 'language/string/prototype/capitalize' },
'Element#getElementsBySelector': { 'name': 'Element#getElementsBySelector', 'type': 'instance method', 'path': 'dom/element/prototype/getelementsbyselector' },
'Enumerable#select': { 'name': 'Enumerable#select', 'type': 'instance method', 'path': 'language/enumerable/prototype/select' },
'Event#pointer': { 'name': 'Event#pointer', 'type': 'instance method', 'path': 'dom/event/prototype/pointer' },
'Prototype': { 'name': 'Prototype', 'type': 'namespace', 'path': 'language/prototype' },
'RegExp.escape': { 'name': 'RegExp.escape', 'type': 'class method', 'path': 'language/regexp/escape' },
'Hash#clone': { 'name': 'Hash#clone', 'type': 'instance method', 'path': 'language/hash/prototype/clone' },
'Element#cumulativeOffset': { 'name': 'Element#cumulativeOffset', 'type': 'instance method', 'path': 'dom/element/prototype/cumulativeoffset' },
'Element#getOpacity': { 'name': 'Element#getOpacity', 'type': 'instance method', 'path': 'dom/element/prototype/getopacity' },
'Hash#inspect': { 'name': 'Hash#inspect', 'type': 'instance method', 'path': 'language/hash/prototype/inspect' },
'Event.fire': { 'name': 'Event.fire', 'type': 'class method', 'path': 'dom/event/fire' },
'Element.extend': { 'name': 'Element.extend', 'type': 'class method', 'path': 'dom/element/extend' },
'Form.Element.focus': { 'name': 'Form.Element.focus', 'type': 'class method', 'path': 'dom/form/element/focus' },
'Ajax.PeriodicalUpdater#start': { 'name': 'Ajax.PeriodicalUpdater#start', 'type': 'instance method', 'path': 'ajax/ajax/periodicalupdater/prototype/start' },
'Element.getElementsBySelector': { 'name': 'Element.getElementsBySelector', 'type': 'class method', 'path': 'dom/element/getelementsbyselector' },
'Element#makeClipping': { 'name': 'Element#makeClipping', 'type': 'instance method', 'path': 'dom/element/prototype/makeclipping' },
'Element.makeClipping': { 'name': 'Element.makeClipping', 'type': 'class method', 'path': 'dom/element/makeclipping' },
'Abstract': { 'name': 'Abstract', 'type': 'namespace', 'path': 'dom/abstract' },
'Element.addClassName': { 'name': 'Element.addClassName', 'type': 'class method', 'path': 'dom/element/addclassname' },
'Element.removeClassName': { 'name': 'Element.removeClassName', 'type': 'class method', 'path': 'dom/element/removeclassname' },
'Form.Element.clear': { 'name': 'Form.Element.clear', 'type': 'class method', 'path': 'dom/form/element/clear' },
'Element.setOpacity': { 'name': 'Element.setOpacity', 'type': 'class method', 'path': 'dom/element/setopacity' },
'String#truncate': { 'name': 'String#truncate', 'type': 'instance method', 'path': 'language/string/prototype/truncate' },
'Form.disable': { 'name': 'Form.disable', 'type': 'class method', 'path': 'dom/form/disable' },
'Element#hasClassName': { 'name': 'Element#hasClassName', 'type': 'instance method', 'path': 'dom/element/prototype/hasclassname' },
'Ajax.Response#getHeader': { 'name': 'Ajax.Response#getHeader', 'type': 'instance method', 'path': 'ajax/ajax/response/prototype/getheader' },
'Element#fire': { 'name': 'Element#fire', 'type': 'instance method', 'path': 'dom/element/prototype/fire' },
'Number#toColorPart': { 'name': 'Number#toColorPart', 'type': 'instance method', 'path': 'language/number/prototype/tocolorpart' },
'Selector.findChildElements': { 'name': 'Selector.findChildElements', 'type': 'class method', 'path': 'dom/selector/findchildelements' },
'Element#firstDescendant': { 'name': 'Element#firstDescendant', 'type': 'instance method', 'path': 'dom/element/prototype/firstdescendant' },
'Form.Element.disable': { 'name': 'Form.Element.disable', 'type': 'class method', 'path': 'dom/form/element/disable' },
'Element.Methods': { 'name': 'Element.Methods', 'type': 'mixin', 'path': 'dom/element/methods' },
'String#evalJSON': { 'name': 'String#evalJSON', 'type': 'instance method', 'path': 'language/string/prototype/evaljson' },
'String#succ': { 'name': 'String#succ', 'type': 'instance method', 'path': 'language/string/prototype/succ' },
'Form.Element.setValue': { 'name': 'Form.Element.setValue', 'type': 'class method', 'path': 'dom/form/element/setvalue' },
'Ajax.Request#success': { 'name': 'Ajax.Request#success', 'type': 'instance method', 'path': 'ajax/ajax/request/prototype/success' },
'Ajax.PeriodicalUpdater#stop': { 'name': 'Ajax.PeriodicalUpdater#stop', 'type': 'instance method', 'path': 'ajax/ajax/periodicalupdater/prototype/stop' },
'Element#select': { 'name': 'Element#select', 'type': 'instance method', 'path': 'dom/element/prototype/select' },
'PeriodicalExecuter': { 'name': 'PeriodicalExecuter', 'type': 'class', 'path': 'language/periodicalexecuter' },
'Prototype.BrowserFeatures.XPath': { 'name': 'Prototype.BrowserFeatures.XPath', 'type': 'class property', 'path': 'language/prototype/browserfeatures/xpath' },
'Element#removeClassName': { 'name': 'Element#removeClassName', 'type': 'instance method', 'path': 'dom/element/prototype/removeclassname' },
'Element#getDimensions': { 'name': 'Element#getDimensions', 'type': 'instance method', 'path': 'dom/element/prototype/getdimensions' },
'Element#observe': { 'name': 'Element#observe', 'type': 'instance method', 'path': 'dom/element/prototype/observe' },
'Element#up': { 'name': 'Element#up', 'type': 'instance method', 'path': 'dom/element/prototype/up' },
'Ajax.Updater': { 'name': 'Ajax.Updater', 'type': 'class', 'path': 'ajax/ajax/updater' },
'Prototype.Version': { 'name': 'Prototype.Version', 'type': 'class property', 'path': 'language/prototype/version' },
'String#underscore': { 'name': 'String#underscore', 'type': 'instance method', 'path': 'language/string/prototype/underscore' },
'String#evalScripts': { 'name': 'String#evalScripts', 'type': 'instance method', 'path': 'language/string/prototype/evalscripts' },
'Array#indexOf': { 'name': 'Array#indexOf', 'type': 'instance method', 'path': 'language/array/prototype/indexof' },
'Event.isRightClick': { 'name': 'Event.isRightClick', 'type': 'class method', 'path': 'dom/event/isrightclick' },
'Form#findFirstElement': { 'name': 'Form#findFirstElement', 'type': 'instance method', 'path': 'dom/form/prototype/findfirstelement' },
'Element#clone': { 'name': 'Element#clone', 'type': 'instance method', 'path': 'dom/element/prototype/clone' },
'$w': { 'name': '$w', 'type': 'utility', 'path': 'language/dollarw' },
'Class': { 'name': 'Class', 'type': 'class', 'path': 'language/class' },
'Event.stopObserving': { 'name': 'Event.stopObserving', 'type': 'class method', 'path': 'dom/event/stopobserving' },
'Form.enable': { 'name': 'Form.enable', 'type': 'class method', 'path': 'dom/form/enable' },
'Array#first': { 'name': 'Array#first', 'type': 'instance method', 'path': 'language/array/prototype/first' },
'Element.relativize': { 'name': 'Element.relativize', 'type': 'class method', 'path': 'dom/element/relativize' },
'Enumerable#toArray': { 'name': 'Enumerable#toArray', 'type': 'instance method', 'path': 'language/enumerable/prototype/toarray' },
'Hash#unset': { 'name': 'Hash#unset', 'type': 'instance method', 'path': 'language/hash/prototype/unset' },
'Form.getInputs': { 'name': 'Form.getInputs', 'type': 'class method', 'path': 'dom/form/getinputs' },
'Element#undoPositioned': { 'name': 'Element#undoPositioned', 'type': 'instance method', 'path': 'dom/element/prototype/undopositioned' },
'Element#cleanWhitespace': { 'name': 'Element#cleanWhitespace', 'type': 'instance method', 'path': 'dom/element/prototype/cleanwhitespace' },
'Prototype.Browser': { 'name': 'Prototype.Browser', 'type': 'namespace', 'path': 'language/prototype/browser' },
'String#startsWith': { 'name': 'String#startsWith', 'type': 'instance method', 'path': 'language/string/prototype/startswith' },
'Form.Element#present': { 'name': 'Form.Element#present', 'type': 'instance method', 'path': 'dom/form/element/prototype/present' },
'Form.Element': { 'name': 'Form.Element', 'type': 'namespace', 'path': 'dom/form/element' },
'Element.ancestors': { 'name': 'Element.ancestors', 'type': 'class method', 'path': 'dom/element/ancestors' },
'Array#compact': { 'name': 'Array#compact', 'type': 'instance method', 'path': 'language/array/prototype/compact' },
'String#endsWith': { 'name': 'String#endsWith', 'type': 'instance method', 'path': 'language/string/prototype/endswith' },
'Element.classNames': { 'name': 'Element.classNames', 'type': 'class method', 'path': 'dom/element/classnames' },
'Element#visible': { 'name': 'Element#visible', 'type': 'instance method', 'path': 'dom/element/prototype/visible' },
'Class.create': { 'name': 'Class.create', 'type': 'class method', 'path': 'language/class/create' },
'Element.down': { 'name': 'Element.down', 'type': 'class method', 'path': 'dom/element/down' },
'Number#abs': { 'name': 'Number#abs', 'type': 'instance method', 'path': 'language/number/prototype/abs' },
'String#include': { 'name': 'String#include', 'type': 'instance method', 'path': 'language/string/prototype/include' },
'Enumerable#any': { 'name': 'Enumerable#any', 'type': 'instance method', 'path': 'language/enumerable/prototype/any' },
'Element.toggle': { 'name': 'Element.toggle', 'type': 'class method', 'path': 'dom/element/toggle' },
'Prototype.Selector.select': { 'name': 'Prototype.Selector.select', 'type': 'class method', 'path': 'language/prototype/selector/select' },
'Enumerable#pluck': { 'name': 'Enumerable#pluck', 'type': 'instance method', 'path': 'language/enumerable/prototype/pluck' },
'Form.Element.EventObserver': { 'name': 'Form.Element.EventObserver', 'type': 'class', 'path': 'dom/form/element/eventobserver' },
'Element.getDimensions': { 'name': 'Element.getDimensions', 'type': 'class method', 'path': 'dom/element/getdimensions' },
'Enumerable#collect': { 'name': 'Enumerable#collect', 'type': 'instance method', 'path': 'language/enumerable/prototype/collect' },
'Form.Element.Observer': { 'name': 'Form.Element.Observer', 'type': 'class', 'path': 'dom/form/element/observer' },
'String#gsub': { 'name': 'String#gsub', 'type': 'instance method', 'path': 'language/string/prototype/gsub' },
'RegExp': { 'name': 'RegExp', 'type': 'class', 'path': 'language/regexp' },
'Element#wrap': { 'name': 'Element#wrap', 'type': 'instance method', 'path': 'dom/element/prototype/wrap' },
'Event.on': { 'name': 'Event.on', 'type': 'class method', 'path': 'dom/event/on' },
'Ajax.Request': { 'name': 'Ajax.Request', 'type': 'class', 'path': 'ajax/ajax/request' },
'Enumerable#inspect': { 'name': 'Enumerable#inspect', 'type': 'instance method', 'path': 'language/enumerable/prototype/inspect' },
'Form.Element#enable': { 'name': 'Form.Element#enable', 'type': 'instance method', 'path': 'dom/form/element/prototype/enable' },
'Object.isNumber': { 'name': 'Object.isNumber', 'type': 'class method', 'path': 'language/object/isnumber' },
'document.stopObserving': { 'name': 'document.stopObserving', 'type': 'class method', 'path': 'dom/document/stopobserving' },
'Element.Layout': { 'name': 'Element.Layout', 'type': 'class', 'path': 'dom/element/layout' },
'String#strip': { 'name': 'String#strip', 'type': 'instance method', 'path': 'language/string/prototype/strip' },
'new Element.Offset': { 'name': 'new Element.Offset', 'type': 'constructor', 'path': 'dom/element/offset/new' },
'Element.toggleClassName': { 'name': 'Element.toggleClassName', 'type': 'class method', 'path': 'dom/element/toggleclassname' },
'Event#findElement': { 'name': 'Event#findElement', 'type': 'instance method', 'path': 'dom/event/prototype/findelement' },
'Element.match': { 'name': 'Element.match', 'type': 'class method', 'path': 'dom/element/match' },
'Event#stop': { 'name': 'Event#stop', 'type': 'instance method', 'path': 'dom/event/prototype/stop' },
'Form.serialize': { 'name': 'Form.serialize', 'type': 'class method', 'path': 'dom/form/serialize' },
'Object.clone': { 'name': 'Object.clone', 'type': 'class method', 'path': 'language/object/clone' },
'Object.isString': { 'name': 'Object.isString', 'type': 'class method', 'path': 'language/object/isstring' },
'Enumerable#entries': { 'name': 'Enumerable#entries', 'type': 'instance method', 'path': 'language/enumerable/prototype/entries' },
'Element#siblings': { 'name': 'Element#siblings', 'type': 'instance method', 'path': 'dom/element/prototype/siblings' },
'Enumerable#member': { 'name': 'Enumerable#member', 'type': 'instance method', 'path': 'language/enumerable/prototype/member' },
'Element.readAttribute': { 'name': 'Element.readAttribute', 'type': 'class method', 'path': 'dom/element/readattribute' },
'Ajax.Responders.unregister': { 'name': 'Ajax.Responders.unregister', 'type': 'class method', 'path': 'ajax/ajax/responders/unregister' },
'Element#addClassName': { 'name': 'Element#addClassName', 'type': 'instance method', 'path': 'dom/element/prototype/addclassname' },
'String#stripScripts': { 'name': 'String#stripScripts', 'type': 'instance method', 'path': 'language/string/prototype/stripscripts' },
'Enumerable': { 'name': 'Enumerable', 'type': 'mixin', 'path': 'language/enumerable' },
'Element.Layout.PROPERTIES': { 'name': 'Element.Layout.PROPERTIES', 'type': 'constant', 'path': 'dom/element/layout/properties' },
'Selector': { 'name': 'Selector', 'type': 'class', 'path': 'dom/selector' },
'Enumerable#detect': { 'name': 'Enumerable#detect', 'type': 'instance method', 'path': 'language/enumerable/prototype/detect' },
'Form.findFirstElement': { 'name': 'Form.findFirstElement', 'type': 'class method', 'path': 'dom/form/findfirstelement' },
'Ajax section': { 'name': 'Ajax section', 'type': 'section', 'path': 'ajax' },
'new Event.Handler': { 'name': 'new Event.Handler', 'type': 'constructor', 'path': 'dom/event/handler/new' },
'Enumerable#every': { 'name': 'Enumerable#every', 'type': 'instance method', 'path': 'language/enumerable/prototype/every' },
'Prototype.Selector.match': { 'name': 'Prototype.Selector.match', 'type': 'class method', 'path': 'language/prototype/selector/match' },
'Enumerable#all': { 'name': 'Enumerable#all', 'type': 'instance method', 'path': 'language/enumerable/prototype/all' },
'Element.store': { 'name': 'Element.store', 'type': 'class method', 'path': 'dom/element/store' },
'Language section': { 'name': 'Language section', 'type': 'section', 'path': 'language' },
'String#sub': { 'name': 'String#sub', 'type': 'instance method', 'path': 'language/string/prototype/sub' },
'Element.Layout#get': { 'name': 'Element.Layout#get', 'type': 'instance method', 'path': 'dom/element/layout/prototype/get' },
'Element.getWidth': { 'name': 'Element.getWidth', 'type': 'class method', 'path': 'dom/element/getwidth' },
'Enumerable#sortBy': { 'name': 'Enumerable#sortBy', 'type': 'instance method', 'path': 'language/enumerable/prototype/sortby' },
'Element.measure': { 'name': 'Element.measure', 'type': 'class method', 'path': 'dom/element/measure' },
'Function#delay': { 'name': 'Function#delay', 'type': 'instance method', 'path': 'language/function/prototype/delay' },
'Element.cumulativeScrollOffset': { 'name': 'Element.cumulativeScrollOffset', 'type': 'class method', 'path': 'dom/element/cumulativescrolloffset' },
'Element.cumulativeOffset': { 'name': 'Element.cumulativeOffset', 'type': 'class method', 'path': 'dom/element/cumulativeoffset' },
'Event.observe': { 'name': 'Event.observe', 'type': 'class method', 'path': 'dom/event/observe' },
'Ajax.Responders': { 'name': 'Ajax.Responders', 'type': 'namespace', 'path': 'ajax/ajax/responders' },
'Enumerable#find': { 'name': 'Enumerable#find', 'type': 'instance method', 'path': 'language/enumerable/prototype/find' },
'Array#inspect': { 'name': 'Array#inspect', 'type': 'instance method', 'path': 'language/array/prototype/inspect' },
'Enumerable#map': { 'name': 'Enumerable#map', 'type': 'instance method', 'path': 'language/enumerable/prototype/map' },
'Element.fire': { 'name': 'Element.fire', 'type': 'class method', 'path': 'dom/element/fire' },
'Element.getOpacity': { 'name': 'Element.getOpacity', 'type': 'class method', 'path': 'dom/element/getopacity' },
'Form#getElements': { 'name': 'Form#getElements', 'type': 'instance method', 'path': 'dom/form/prototype/getelements' },
'Form#serialize': { 'name': 'Form#serialize', 'type': 'instance method', 'path': 'dom/form/prototype/serialize' },
'Element.undoPositioned': { 'name': 'Element.undoPositioned', 'type': 'class method', 'path': 'dom/element/undopositioned' },
'Element#inspect': { 'name': 'Element#inspect', 'type': 'instance method', 'path': 'dom/element/prototype/inspect' },
'Form.EventObserver': { 'name': 'Form.EventObserver', 'type': 'class', 'path': 'dom/form/eventobserver' },
'Element#retrieve': { 'name': 'Element#retrieve', 'type': 'instance method', 'path': 'dom/element/prototype/retrieve' },
'Element.empty': { 'name': 'Element.empty', 'type': 'class method', 'path': 'dom/element/empty' },
'Element.Offset': { 'name': 'Element.Offset', 'type': 'class', 'path': 'dom/element/offset' },
'Element.nextSiblings': { 'name': 'Element.nextSiblings', 'type': 'class method', 'path': 'dom/element/nextsiblings' },
'Prototype.K': { 'name': 'Prototype.K', 'type': 'class method', 'path': 'language/prototype/k' },
'String#escapeHTML': { 'name': 'String#escapeHTML', 'type': 'instance method', 'path': 'language/string/prototype/escapehtml' },
'Object.values': { 'name': 'Object.values', 'type': 'class method', 'path': 'language/object/values' },
'Enumerable#max': { 'name': 'Enumerable#max', 'type': 'instance method', 'path': 'language/enumerable/prototype/max' },
'Ajax.PeriodicalUpdater': { 'name': 'Ajax.PeriodicalUpdater', 'type': 'class', 'path': 'ajax/ajax/periodicalupdater' },
'Form.serializeElements': { 'name': 'Form.serializeElements', 'type': 'class method', 'path': 'dom/form/serializeelements' },
'Hash#set': { 'name': 'Hash#set', 'type': 'instance method', 'path': 'language/hash/prototype/set' },
'Date#toJSON': { 'name': 'Date#toJSON', 'type': 'instance method', 'path': 'language/date/prototype/tojson' },
'Form.Element#clear': { 'name': 'Form.Element#clear', 'type': 'instance method', 'path': 'dom/form/element/prototype/clear' },
'Element.Offset#relativeTo': { 'name': 'Element.Offset#relativeTo', 'type': 'instance method', 'path': 'dom/element/offset/prototype/relativeto' },
'Array#without': { 'name': 'Array#without', 'type': 'instance method', 'path': 'language/array/prototype/without' },
'Form.Observer': { 'name': 'Form.Observer', 'type': 'class', 'path': 'dom/form/observer' },
'Hash': { 'name': 'Hash', 'type': 'class', 'path': 'language/hash' },
'new Form.Element.Observer': { 'name': 'new Form.Element.Observer', 'type': 'constructor', 'path': 'dom/form/element/observer/new' },
'Element#toggleClassName': { 'name': 'Element#toggleClassName', 'type': 'instance method', 'path': 'dom/element/prototype/toggleclassname' },
'Selector.findElement': { 'name': 'Selector.findElement', 'type': 'class method', 'path': 'dom/selector/findelement' },
'Array#reverse': { 'name': 'Array#reverse', 'type': 'instance method', 'path': 'language/array/prototype/reverse' },
'new Hash': { 'name': 'new Hash', 'type': 'constructor', 'path': 'language/hash/new' },
'Enumerable#eachSlice': { 'name': 'Enumerable#eachSlice', 'type': 'instance method', 'path': 'language/enumerable/prototype/eachslice' },
'Element.siblings': { 'name': 'Element.siblings', 'type': 'class method', 'path': 'dom/element/siblings' },
'ObjectRange#include': { 'name': 'ObjectRange#include', 'type': 'instance method', 'path': 'language/objectrange/prototype/include' },
'Number#toPaddedString': { 'name': 'Number#toPaddedString', 'type': 'instance method', 'path': 'language/number/prototype/topaddedstring' },
'Hash#each': { 'name': 'Hash#each', 'type': 'instance method', 'path': 'language/hash/prototype/each' },
'Form#getInputs': { 'name': 'Form#getInputs', 'type': 'instance method', 'path': 'dom/form/prototype/getinputs' },
'Element.wrap': { 'name': 'Element.wrap', 'type': 'class method', 'path': 'dom/element/wrap' },
'Form#disable': { 'name': 'Form#disable', 'type': 'instance method', 'path': 'dom/form/prototype/disable' },
'Hash#values': { 'name': 'Hash#values', 'type': 'instance method', 'path': 'language/hash/prototype/values' },
'Element#viewportOffset': { 'name': 'Element#viewportOffset', 'type': 'instance method', 'path': 'dom/element/prototype/viewportoffset' },
'Element#ancestors': { 'name': 'Element#ancestors', 'type': 'instance method', 'path': 'dom/element/prototype/ancestors' },
'ObjectRange#start': { 'name': 'ObjectRange#start', 'type': 'instance property', 'path': 'language/objectrange/prototype/start' },
'Element.immediateDescendants': { 'name': 'Element.immediateDescendants', 'type': 'class method', 'path': 'dom/element/immediatedescendants' },
'Form.Element#disable': { 'name': 'Form.Element#disable', 'type': 'instance method', 'path': 'dom/form/element/prototype/disable' },
'Hash#toObject': { 'name': 'Hash#toObject', 'type': 'instance method', 'path': 'language/hash/prototype/toobject' },
'Event.stop': { 'name': 'Event.stop', 'type': 'class method', 'path': 'dom/event/stop' },
'Ajax.Request#getHeader': { 'name': 'Ajax.Request#getHeader', 'type': 'instance method', 'path': 'ajax/ajax/request/prototype/getheader' },
'Element#scrollTo': { 'name': 'Element#scrollTo', 'type': 'instance method', 'path': 'dom/element/prototype/scrollto' },
'Form': { 'name': 'Form', 'type': 'namespace', 'path': 'dom/form' },
'String#isJSON': { 'name': 'String#isJSON', 'type': 'instance method', 'path': 'language/string/prototype/isjson' },
'Element#childElements': { 'name': 'Element#childElements', 'type': 'instance method', 'path': 'dom/element/prototype/childelements' },
'Element#getStorage': { 'name': 'Element#getStorage', 'type': 'instance method', 'path': 'dom/element/prototype/getstorage' },
'Element.Offset#toString': { 'name': 'Element.Offset#toString', 'type': 'instance method', 'path': 'dom/element/offset/prototype/tostring' },
'Event#extend': { 'name': 'Event#extend', 'type': 'instance method', 'path': 'dom/event/prototype/extend' },
'Event.element': { 'name': 'Event.element', 'type': 'class method', 'path': 'dom/event/element' },
'new Abstract.TimedObserver': { 'name': 'new Abstract.TimedObserver', 'type': 'constructor', 'path': 'dom/abstract/timedobserver/new' },
'Object.isUndefined': { 'name': 'Object.isUndefined', 'type': 'class method', 'path': 'language/object/isundefined' },
'Function#argumentNames': { 'name': 'Function#argumentNames', 'type': 'instance method', 'path': 'language/function/prototype/argumentnames' },
'Ajax.Response#transport': { 'name': 'Ajax.Response#transport', 'type': 'instance property', 'path': 'ajax/ajax/response/prototype/transport' },
'Prototype.Selector.find': { 'name': 'Prototype.Selector.find', 'type': 'class method', 'path': 'language/prototype/selector/find' },
'Ajax.activeRequestCount': { 'name': 'Ajax.activeRequestCount', 'type': 'class property', 'path': 'ajax/ajax/activerequestcount' },
'Ajax.Response#getResponseHeader': { 'name': 'Ajax.Response#getResponseHeader', 'type': 'instance method', 'path': 'ajax/ajax/response/prototype/getresponseheader' },
'String#toArray': { 'name': 'String#toArray', 'type': 'instance method', 'path': 'language/string/prototype/toarray' },
'document.observe': { 'name': 'document.observe', 'type': 'class method', 'path': 'dom/document/observe' },
'Enumerable#each': { 'name': 'Enumerable#each', 'type': 'instance method', 'path': 'language/enumerable/prototype/each' },
'Object.keys': { 'name': 'Object.keys', 'type': 'class method', 'path': 'language/object/keys' },
'Prototype.BrowserFeatures': { 'name': 'Prototype.BrowserFeatures', 'type': 'namespace', 'path': 'language/prototype/browserfeatures' },
'Element#readAttribute': { 'name': 'Element#readAttribute', 'type': 'instance method', 'path': 'dom/element/prototype/readattribute' },
'Element.retrieve': { 'name': 'Element.retrieve', 'type': 'class method', 'path': 'dom/element/retrieve' },
'Class#addMethods': { 'name': 'Class#addMethods', 'type': 'instance method', 'path': 'language/class/prototype/addmethods' },
'Ajax.Response#getAllHeaders': { 'name': 'Ajax.Response#getAllHeaders', 'type': 'instance method', 'path': 'ajax/ajax/response/prototype/getallheaders' },
'Enumerable#inGroupsOf': { 'name': 'Enumerable#inGroupsOf', 'type': 'instance method', 'path': 'language/enumerable/prototype/ingroupsof' },
'Event#isRightClick': { 'name': 'Event#isRightClick', 'type': 'instance method', 'path': 'dom/event/prototype/isrightclick' },
'Array#lastIndexOf': { 'name': 'Array#lastIndexOf', 'type': 'instance method', 'path': 'language/array/prototype/lastindexof' },
'Function#methodize': { 'name': 'Function#methodize', 'type': 'instance method', 'path': 'language/function/prototype/methodize' },
'$$': { 'name': '$$', 'type': 'utility', 'path': 'dom/dollardollar' },
'Element.Offset#inspect': { 'name': 'Element.Offset#inspect', 'type': 'instance method', 'path': 'dom/element/offset/prototype/inspect' },
'Element#absolutize': { 'name': 'Element#absolutize', 'type': 'instance method', 'path': 'dom/element/prototype/absolutize' },
'Object.isFunction': { 'name': 'Object.isFunction', 'type': 'class method', 'path': 'language/object/isfunction' },
'Element.undoClipping': { 'name': 'Element.undoClipping', 'type': 'class method', 'path': 'dom/element/undoclipping' },
'Element.childElements': { 'name': 'Element.childElements', 'type': 'class method', 'path': 'dom/element/childelements' },
'Form.Element.select': { 'name': 'Form.Element.select', 'type': 'class method', 'path': 'dom/form/element/select' },
'Ajax': { 'name': 'Ajax', 'type': 'namespace', 'path': 'ajax/ajax' },
'Element#undoClipping': { 'name': 'Element#undoClipping', 'type': 'instance method', 'path': 'dom/element/prototype/undoclipping' },
'Element#match': { 'name': 'Element#match', 'type': 'instance method', 'path': 'dom/element/prototype/match' },
'Form.Element.enable': { 'name': 'Form.Element.enable', 'type': 'class method', 'path': 'dom/form/element/enable' },
'Enumerable#min': { 'name': 'Enumerable#min', 'type': 'instance method', 'path': 'language/enumerable/prototype/min' },
'String#stripTags': { 'name': 'String#stripTags', 'type': 'instance method', 'path': 'language/string/prototype/striptags' },
'Number#times': { 'name': 'Number#times', 'type': 'instance method', 'path': 'language/number/prototype/times' },
'Date#toISOString': { 'name': 'Date#toISOString', 'type': 'instance method', 'path': 'language/date/prototype/toisostring' },
'Element.on': { 'name': 'Element.on', 'type': 'class method', 'path': 'dom/element/on' },
'Element.scrollTo': { 'name': 'Element.scrollTo', 'type': 'class method', 'path': 'dom/element/scrollto' },
'Event.isLeftClick': { 'name': 'Event.isLeftClick', 'type': 'class method', 'path': 'dom/event/isleftclick' },
'Element#identify': { 'name': 'Element#identify', 'type': 'instance method', 'path': 'dom/element/prototype/identify' },
'document.viewport': { 'name': 'document.viewport', 'type': 'namespace', 'path': 'dom/document/viewport' },
'Array#toArray': { 'name': 'Array#toArray', 'type': 'instance method', 'path': 'language/array/prototype/toarray' },
'Element#clonePosition': { 'name': 'Element#clonePosition', 'type': 'instance method', 'path': 'dom/element/prototype/cloneposition' },
'Object.isArray': { 'name': 'Object.isArray', 'type': 'class method', 'path': 'language/object/isarray' },
'Selector.matchElements': { 'name': 'Selector.matchElements', 'type': 'class method', 'path': 'dom/selector/matchelements' },
'Object.inspect': { 'name': 'Object.inspect', 'type': 'class method', 'path': 'language/object/inspect' },
'String#inspect': { 'name': 'String#inspect', 'type': 'instance method', 'path': 'language/string/prototype/inspect' },
'Array#size': { 'name': 'Array#size', 'type': 'instance method', 'path': 'language/array/prototype/size' },
'Ajax.Response#responseText': { 'name': 'Ajax.Response#responseText', 'type': 'instance property', 'path': 'ajax/ajax/response/prototype/responsetext' },
'Element#getStyle': { 'name': 'Element#getStyle', 'type': 'instance method', 'path': 'dom/element/prototype/getstyle' },
'String#parseQuery': { 'name': 'String#parseQuery', 'type': 'instance method', 'path': 'language/string/prototype/parsequery' },
'Ajax.Response#responseJSON': { 'name': 'Ajax.Response#responseJSON', 'type': 'instance property', 'path': 'ajax/ajax/response/prototype/responsejson' },
'Element#insert': { 'name': 'Element#insert', 'type': 'instance method', 'path': 'dom/element/prototype/insert' },
'new Ajax.Updater': { 'name': 'new Ajax.Updater', 'type': 'constructor', 'path': 'ajax/ajax/updater/new' },
'Selector#match': { 'name': 'Selector#match', 'type': 'instance method', 'path': 'dom/selector/prototype/match' },
'Ajax.Response#readyState': { 'name': 'Ajax.Response#readyState', 'type': 'instance property', 'path': 'ajax/ajax/response/prototype/readystate' },
'Enumerable#filter': { 'name': 'Enumerable#filter', 'type': 'instance method', 'path': 'language/enumerable/prototype/filter' },
'Form.focusFirstElement': { 'name': 'Form.focusFirstElement', 'type': 'class method', 'path': 'dom/form/focusfirstelement' },
'Ajax.Response#headerJSON': { 'name': 'Ajax.Response#headerJSON', 'type': 'instance property', 'path': 'ajax/ajax/response/prototype/headerjson' },
'Form#enable': { 'name': 'Form#enable', 'type': 'instance method', 'path': 'dom/form/prototype/enable' },
'Form.Element#activate': { 'name': 'Form.Element#activate', 'type': 'instance method', 'path': 'dom/form/element/prototype/activate' },
'Prototype.BrowserFeatures.ElementExtensions': { 'name': 'Prototype.BrowserFeatures.ElementExtensions', 'type': 'class property', 'path': 'language/prototype/browserfeatures/elementextensions' },
'Event#pointerX': { 'name': 'Event#pointerX', 'type': 'instance method', 'path': 'dom/event/prototype/pointerx' },
'Object.extend': { 'name': 'Object.extend', 'type': 'class method', 'path': 'language/object/extend' },
'DOM section': { 'name': 'DOM section', 'type': 'section', 'path': 'dom' },
'document.viewport.getWidth': { 'name': 'document.viewport.getWidth', 'type': 'class method', 'path': 'dom/document/viewport/getwidth' },
'Element.getOffsetParent': { 'name': 'Element.getOffsetParent', 'type': 'class method', 'path': 'dom/element/getoffsetparent' },
'Object.toJSON': { 'name': 'Object.toJSON', 'type': 'class method', 'path': 'language/object/tojson' },
'PeriodicalExecuter#stop': { 'name': 'PeriodicalExecuter#stop', 'type': 'instance method', 'path': 'language/periodicalexecuter/prototype/stop' },
'Function#bindAsEventListener': { 'name': 'Function#bindAsEventListener', 'type': 'instance method', 'path': 'language/function/prototype/bindaseventlistener' },
'Event#pointerY': { 'name': 'Event#pointerY', 'type': 'instance method', 'path': 'dom/event/prototype/pointery' },
'Ajax.Response': { 'name': 'Ajax.Response', 'type': 'class', 'path': 'ajax/ajax/response' },
'Hash#toJSON': { 'name': 'Hash#toJSON', 'type': 'instance method', 'path': 'language/hash/prototype/tojson' },
'Hash#keys': { 'name': 'Hash#keys', 'type': 'instance method', 'path': 'language/hash/prototype/keys' },
'Element#store': { 'name': 'Element#store', 'type': 'instance method', 'path': 'dom/element/prototype/store' },
'Element.replace': { 'name': 'Element.replace', 'type': 'class method', 'path': 'dom/element/replace' },
'Element.descendants': { 'name': 'Element.descendants', 'type': 'class method', 'path': 'dom/element/descendants' },
'Prototype.emptyFunction': { 'name': 'Prototype.emptyFunction', 'type': 'class method', 'path': 'language/prototype/emptyfunction' },
'Enumerable#reject': { 'name': 'Enumerable#reject', 'type': 'instance method', 'path': 'language/enumerable/prototype/reject' },
'Enumerable#some': { 'name': 'Enumerable#some', 'type': 'instance method', 'path': 'language/enumerable/prototype/some' },
'Enumerable#partition': { 'name': 'Enumerable#partition', 'type': 'instance method', 'path': 'language/enumerable/prototype/partition' },
'Hash#update': { 'name': 'Hash#update', 'type': 'instance method', 'path': 'language/hash/prototype/update' },
'Form#focusFirstElement': { 'name': 'Form#focusFirstElement', 'type': 'instance method', 'path': 'dom/form/prototype/focusfirstelement' },
'Element#previousSiblings': { 'name': 'Element#previousSiblings', 'type': 'instance method', 'path': 'dom/element/prototype/previoussiblings' },
'Element.clonePosition': { 'name': 'Element.clonePosition', 'type': 'class method', 'path': 'dom/element/cloneposition' },
'Ajax.Response#status': { 'name': 'Ajax.Response#status', 'type': 'instance property', 'path': 'ajax/ajax/response/prototype/status' },
'Element#nextSiblings': { 'name': 'Element#nextSiblings', 'type': 'instance method', 'path': 'dom/element/prototype/nextsiblings' },
'Element.getLayout': { 'name': 'Element.getLayout', 'type': 'class method', 'path': 'dom/element/getlayout' },
'Number#succ': { 'name': 'Number#succ', 'type': 'instance method', 'path': 'language/number/prototype/succ' },
'Element#measure': { 'name': 'Element#measure', 'type': 'instance method', 'path': 'dom/element/prototype/measure' },
'Element#update': { 'name': 'Element#update', 'type': 'instance method', 'path': 'dom/element/prototype/update' },
'Element#stopObserving': { 'name': 'Element#stopObserving', 'type': 'instance method', 'path': 'dom/element/prototype/stopobserving' },
'Element.identify': { 'name': 'Element.identify', 'type': 'class method', 'path': 'dom/element/identify' },
'Element.hasAttribute': { 'name': 'Element.hasAttribute', 'type': 'class method', 'path': 'dom/element/hasattribute' },
'document.viewport.getHeight': { 'name': 'document.viewport.getHeight', 'type': 'class method', 'path': 'dom/document/viewport/getheight' },
'Try.these': { 'name': 'Try.these', 'type': 'class method', 'path': 'language/try/these' },
'Element#adjacent': { 'name': 'Element#adjacent', 'type': 'instance method', 'path': 'dom/element/prototype/adjacent' },
'Enumerable#size': { 'name': 'Enumerable#size', 'type': 'instance method', 'path': 'language/enumerable/prototype/size' },
'new Ajax.Request': { 'name': 'new Ajax.Request', 'type': 'constructor', 'path': 'ajax/ajax/request/new' },
'Element#hasAttribute': { 'name': 'Element#hasAttribute', 'type': 'instance method', 'path': 'dom/element/prototype/hasattribute' },
'Function#wrap': { 'name': 'Function#wrap', 'type': 'instance method', 'path': 'language/function/prototype/wrap' },
'document.loaded': { 'name': 'document.loaded', 'type': 'class property', 'path': 'dom/document/loaded' },
'Element#classNames': { 'name': 'Element#classNames', 'type': 'instance method', 'path': 'dom/element/prototype/classnames' },
'Element#empty': { 'name': 'Element#empty', 'type': 'instance method', 'path': 'dom/element/prototype/empty' },
'Function#defer': { 'name': 'Function#defer', 'type': 'instance method', 'path': 'language/function/prototype/defer' },
'Array#intersect': { 'name': 'Array#intersect', 'type': 'instance method', 'path': 'language/array/prototype/intersect' },
'Element.previousSiblings': { 'name': 'Element.previousSiblings', 'type': 'class method', 'path': 'dom/element/previoussiblings' },
'Form.Element.activate': { 'name': 'Form.Element.activate', 'type': 'class method', 'path': 'dom/form/element/activate' },
'new Template': { 'name': 'new Template', 'type': 'constructor', 'path': 'language/template/new' },
'Enumerable#findAll': { 'name': 'Enumerable#findAll', 'type': 'instance method', 'path': 'language/enumerable/prototype/findall' },
'Form.reset': { 'name': 'Form.reset', 'type': 'class method', 'path': 'dom/form/reset' },
'Function#curry': { 'name': 'Function#curry', 'type': 'instance method', 'path': 'language/function/prototype/curry' }
};